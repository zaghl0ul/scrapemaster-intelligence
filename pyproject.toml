[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "scrapemaster-intelligence"
dynamic = ["version"]
description = "Enterprise-Grade Web Scraping SaaS Platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ScrapeMaster Team", email = "team@scrapemaster.com"}
]
maintainers = [
    {name = "ScrapeMaster Team", email = "team@scrapemaster.com"}
]
keywords = [
    "web-scraping",
    "data-extraction", 
    "automation",
    "saas",
    "streamlit",
    "beautifulsoup",
    "proxy",
    "stealth",
    "enterprise",
    "dashboard",
    "monitoring",
    "analytics",
    "client-management",
    "revenue-tracking"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: Streamlit",
    "Environment :: Web Environment",
    "Natural Language :: English",
]
requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "plotly>=5.15.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "lxml>=4.9.0",
    "html5lib>=1.1",
    "pytz>=2023.3",
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    "aiohttp-proxy>=0.1.2",
    "fake-useragent>=1.4.0",
    "cloudscraper>=1.2.71",
    "brotli>=1.1.0",
    "selenium>=4.11.0",
    "playwright>=1.37.0",
    "scraperapi-sdk>=1.5.3",
    "stripe>=12.2.0",
    "gunicorn>=21.2.0",
    "psycopg2-binary>=2.9.7",
    "redis>=4.6.0",
    "celery>=5.3.0",
    "sentry-sdk>=1.39.0",
    "psutil>=5.9.0",
    "prometheus-client>=0.19.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "pytest-html>=3.2.0",
    "pytest-xdist>=3.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-import-order>=0.18.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "types-requests>=2.31.0",
    "types-beautifulsoup4>=4.12.0",
    "types-python-dateutil>=2.8.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "pre-commit>=3.3.0",
    "tox>=4.6.0",
    "coverage>=7.3.0",
    "codecov>=2.1.0",
    "ipython>=8.14.0",
    "ipdb>=0.13.0",
    "rich>=13.5.0",
    "locust>=2.15.0",
    "pytest-benchmark>=4.0.0",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    "factory-boy>=3.3.0",
    "faker>=19.3.0",
    "responses>=0.23.0",
    "freezegun>=1.2.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "responses>=0.23.0",
    "freezegun>=1.2.0",
    "factory-boy>=3.3.0",
    "faker>=19.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
production = [
    "gunicorn>=21.2.0",
    "psycopg2-binary>=2.9.7",
    "redis>=4.6.0",
    "celery>=5.3.0",
    "sentry-sdk>=1.39.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/scrapemaster-intelligence"
Documentation = "https://github.com/yourusername/scrapemaster-intelligence/blob/main/README.md"
Repository = "https://github.com/yourusername/scrapemaster-intelligence"
"Bug Tracker" = "https://github.com/yourusername/scrapemaster-intelligence/issues"
Changelog = "https://github.com/yourusername/scrapemaster-intelligence/blob/main/CHANGELOG.md"

[project.scripts]
scrapemaster = "src.app:main"
scrapemaster-cli = "src.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.html", "*.css", "*.js"]

[tool.setuptools.dynamic]
version = {attr = "src.core.__version__"}

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "plotly.*",
    "selenium.*",
    "playwright.*",
    "stripe.*",
    "sentry_sdk.*",
    "psycopg2.*",
    "redis.*",
    "celery.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/\.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "env", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
full-report = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "v$version"
version_files = [
    "src/core/__init__.py:__version__",
    "pyproject.toml:version",
]

[tool.towncrier]
package = "scrapemaster_intelligence"
package_dir = "src"
filename = "CHANGELOG.md"
directory = "changes"
title_format = "## [{version}] - {project_date}"
template = "changes/template.md"
start_string = "<!-- TOWNCRIER START -->\n"
underlines = ["", "", ""]
issue_format = "[#{issue}](https://github.com/yourusername/scrapemaster-intelligence/issues/{issue})"

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous"
showcontent = true 